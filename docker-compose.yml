version: '3.9'

services:
  db:
    image: postgres:16
    container_name: numeri-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: numeri
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: ./apps/api
    container_name: numeri-api
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      OCR_SERVICE_URL: ${OCR_SERVICE_URL}
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    command: ["pnpm", "start:prod"]

  web:
    build: ./apps/web
    container_name: numeri-web
    env_file: .env
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:4000}
    ports:
      - "3000:3000"
    depends_on:
      - api
    command: ["pnpm", "start"]

  ocr:
    build: ./services/ocr
    container_name: numeri-ocr
    env_file: .env
    environment:
      PORT: 4100
    ports:
      - "4100:4100"

  # minio:
  #   image: minio/minio:latest
  #   command: server /data --console-address ":9001"
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   environment:
  #     MINIO_ROOT_USER: minioadmin
  #     MINIO_ROOT_PASSWORD: minioadmin
  #   volumes:
  #     - minio_data:/data

volumes:
  db_data:
  # minio_data:
